#!/bin/bash

LOGFILE=/var/log/connect_to_wifi.log
RETAIN_NUM_LINES=10000

INTERFACE=$1
ESSID=$2
PING_DEST=$3
CREATE_TUNNEL=$4

# Quick argument checking - this should be cleaned up
if [ -z "${INTERFACE}" ]
  then
    echo "Must pass the network interface as the first argument"
    exit 1
fi

if [ -z "${ESSID}" ]
  then
    echo "Must pass the network ESSID as the second argument"
    exit 1
fi

if [ -z "${PING_DEST}" ]
  then
    echo "Must pass the ping destination as the third argument"
    exit 1
fi

if [ -z "${CREATE_TUNNEL}" ]
  then
    echo "Must pass whether or not to create a tunnel (0 or 1) as the fourth argument"
    exit 1
fi

function getIP {
    IP_ADDRESS=$(/sbin/ip -f inet -o addr show ${INTERFACE}|cut -d\  -f 7 | cut -d/ -f 1)
    
    if [ -z "${IP_ADDRESS}" ]
    then
        log "There is no IP address assigned to this interface"
        RECONNECT=1
    else
        log "The interface has IP=${IP_ADDRESS}"
    fi
}

function pingServer {
    log "Attempting to ping ${PING_DEST} on ${INTERFACE}"
    ping -I ${INTERFACE} -c2 ${PING_DEST} > /dev/null
    if [ $? -eq "0" ]
    then
        log "The network connection is OK"
    else
        log "The network connection could not be re-established"
        RECONNECT=1
    fi
}

function verifyConnection {
    RECONNECT=0

    getIP

    if [ $RECONNECT -eq "0" ]
    then
        pingServer
    fi
}

function logsetup {  
    TMP=$(tail -n $RETAIN_NUM_LINES $LOGFILE 2>/dev/null) && echo "${TMP}" > $LOGFILE
    exec > >(tee -a $LOGFILE)
    exec 2>&1
}

function log {  
    echo "[$(date --rfc-3339=seconds)] [${INTERFACE}|${ESSID}]: $*"
}

logsetup

verifyConnection

if [ $RECONNECT -ne "0" ]
then
    log "Restarting ${INTERFACE}"
    # Restart the wireless interface
    /sbin/ifdown --force ${INTERFACE}
    /sbin/ifup ${INTERFACE}
    /sbin/iwconfig ${INTERFACE} essid "${ESSID}"
    /sbin/dhclient -v ${INTERFACE}
    log "The network connection has been reset but needs to be verified"

    verifyConnection

    if [ $CREATE_TUNNEL -eq "1" ]
    then
        log "Restarting the reverse tunnel"
        #systemctl restart reversetunnel
    fi
fi


